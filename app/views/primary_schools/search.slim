h1 小学校区を検索する(東京、神奈川限定)

h3 学区を知りたい地点をクリックして「この地点の学区の小学校を検索する」ボタンを押すと、その地点が学区の小学校が表示されます。

#map style="width: 800px; height: 400px;"

javascript:
  var markers = [];
  var initialized = false;
  var geocoder = new google.maps.Geocoder();

  // https://stackoverflow.com/questions/10375925/get-address-after-clicking-in-the-map
  function getAddress(latLng) {
    geocoder.geocode( {'latLng': latLng},
      function(results, status) {
        if(status == google.maps.GeocoderStatus.OK) {
          if(results[0]) {
            $('#address').html(results[0].formatted_address);
          }
          else {
            $('#address').html("No results");
          }
        }
        else {
          $('#address').html(status);
        }
      }
    );
  }

  function codeAddress(map) {
  
    var address = $('#school-address').attr('data-school-address');
  
    geocoder.geocode( { 'address' : address }, function( results, status ) {
      if( status == google.maps.GeocoderStatus.OK ) {

        var marker = new google.maps.Marker({
          position: results[0].geometry.location,
          icon: {
            path: google.maps.SymbolPath.CIRCLE,
            scale: 10
          },
          map: map
        });
        markers.push(marker);
        var bounds = new google.maps.LatLngBounds();
        for (var i = 0; i < markers.length; i++) {
         bounds.extend(markers[i].getPosition());
        }
        map.fitBounds(bounds); 
      } else {
          alert( 'Geocodeは次の理由で失敗しました: ' + status );
      }
    } );
  }

  function addMarker(position, map) {
    $('#lat').val(position.lat());
    $('#lng').val(position.lng());
    var marker = new google.maps.Marker({
      position: position,
      map: map
    });
    markers.push(marker);
    getAddress(position);
    if(0 < $('#school-address').length && false == initialized) {
      codeAddress(map);
    }
  }
  handler = Gmaps.build('Google');
  handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
    handler.getMap().setCenter(#{raw @hash.first.to_json});
    handler.getMap().setZoom(15);
    google.maps.event.addListener(handler.getMap(), 'bounds_changed', function(object){
      if(false == initialized) {
        addMarker(handler.getMap().getCenter(), handler.getMap());
        initialized = true;
      }
    });
    google.maps.event.addListener(handler.getMap(), 'click', function(object){
      for (var i = 0; i < markers.length; i++) {
        markers[i].setMap(null);
      }
      addMarker(object.latLng, handler.getMap());
    });
    google.maps.event.addDomListener(window, "resize", function() {
      var bound = new google.maps.LatLngBounds();
      for(var i in markers)
      {
        bound.extend(markers[i].getPosition());
      }
      handler.getMap().fitBounds(bound);
    });
  });

= form_tag primary_schools_path, method: :get
  = hidden_field_tag :lat, params[:lat]
  = hidden_field_tag :lng, params[:lng]
  p#address
  = button_tag 'この地点の学区の小学校を検索する'

- if @results
  h2 
    | 検索結果
  - if @results.respond_to? :took
    small = 'performed in ' + ( @results.took.to_f / 1000 ).to_s + ' seconds'
  
  - #if @results.respond_to? :response and (suggestion = autosuggest_aggregate(@results.response.suggest, [:title, :body], params[:query]))

  - @results.each do |primary_school|
    article
      - properties = primary_school._source.properties
      h3 = "#{properties.a27_006}#{properties.a27_007}"
      h4#school-address data-school-address="#{properties.a27_008}" = "所在地: #{properties.a27_008}"
      h4 = "コード番号: #{properties.a27_005}"

  - if @results.count == 0
    p 該当地点のデータは登録されていません
